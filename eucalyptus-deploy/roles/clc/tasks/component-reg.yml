# Registration steps are not expected to work for multiple components (e.g. multi-cluster or HA), yet.

    - name: Check for Walrus
      action: shell /usr/sbin/euca_conf --list-walruses | grep -q {{ primary_walrus }}
      register: walrus_return
      ignore_errors: true

    - name: Register Walrus
      action: command /usr/sbin/euca_conf --no-scp --no-rsync --no-sync --register-walrus --partition walrus --host ${hostvars.{$item}.ansible_$vnet_pub.ipv4.address} --component walrus-${hostvars.{$item}.ansible_hostname}
      with_items: ${groups.walrus[0]}
      when: walrus_return.rc|int == 1

    - name: Check for SC
      action: shell /usr/sbin/euca_conf --list-scs | grep -q {{ primary_sc }}
      register: sc_return
      ignore_errors: true

    - name: Register SC
      action: command /usr/sbin/euca_conf --no-scp --no-rsync --no-sync --register-sc --partition $partition --host ${hostvars.{$item}.ansible_$vnet_pub.ipv4.address} --component sc-${hostvars.{$item}.ansible_hostname}
      with_items: ${groups.sc[0]}
      when: sc_return.rc|int == 1

    - name: Check for CC
      action: shell /usr/sbin/euca_conf --list-clusters | grep -q {{ primary_cc }}
      register: cc_return
      ignore_errors: true

    - name: Register CC
      action: command /usr/sbin/euca_conf --no-scp --no-rsync --no-sync --register-cluster --partition $partition --host ${hostvars.{$item}.ansible_$vnet_pub.ipv4.address} --component cc-${hostvars.{$item}.ansible_hostname}
      with_items: ${groups.cc[0]}
      when: cc_return.rc|int == 1

    - name: Pull cluster (node and cc) keys
      action: fetch src=/var/lib/eucalyptus/keys/{{ partition }}/{{ item }} dest=/tmp/ flat=yes
      with_items:
      - cluster-cert.pem
      - cluster-pk.pem
      - node-cert.pem
      - node-pk.pem

    - name: Wait for Walrus and his bukkitz
      action: wait_for host=${hostvars.{$item}.ansible_$vnet_pub.ipv4.address} port=8773 delay=10 timeout=300
      with_items: ${groups.walrus}

    - name: Install ELB utils
      action: yum name=eucalyptus-load-balancer-image state=installed
      register: result

    - name: Get Administrator Credentials
      action: command euca-get-credentials -e / -a eucalyptus -u admin /root/admin.zip creates=/root/admin.zip
      tags:
      - creds

    - name: Unpack admin credentials
      action: command /usr/bin/unzip -qou /root/admin.zip -d /root/admin-creds creates=/root/admin-creds/eucarc
      tags:
      - creds

    - name: Template bashrc for root
      action: template src=bashrc.j2 dest=/root/.bashrc owner=root group=root

    - name: Install default ELB image
      action: shell source /root/admin-creds/eucarc && euca-install-load-balancer --install-default
      when: result.changed

    - name: Set block storage manager
      action: shell source /root/admin-creds/eucarc && euca-modify-property -p {{ partition }}.storage.blockstoragemanager={{ storbackend }}

    - name: Cleanup credentials
      action: file state=absent path={{ item }}
      with_items:
      - /root/admin-creds
      - /root/admin.zip

    - name: Pause to settle and let ELB service ENABLE
      action: pause minutes=2

    - name: Get Administrator Credentials
      action: command euca-get-credentials -e / -a eucalyptus -u admin /root/admin.zip creates=/root/admin.zip
      tags:
      - creds

    - name: Unpack admin credentials
      action: command /usr/bin/unzip -qou /root/admin.zip -d /root/admin-creds creates=/root/admin-creds/eucarc
      tags:
      - creds

